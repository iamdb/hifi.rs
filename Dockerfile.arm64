FROM node:18-bullseye as www

RUN mkdir /app

WORKDIR /app

COPY www .

RUN npm install && npm run build

FROM rust:1-bullseye as build

RUN dpkg --add-architecture arm64
RUN apt-get update && apt-get install -y curl libgstreamer1.0-dev:arm64 g++-aarch64-linux-gnu libc6-dev-arm64-cross libglib2.0-dev:arm64

RUN rustup target add aarch64-unknown-linux-gnu
RUN rustup toolchain install stable-aarch64-unknown-linux-gnu

ENV PKG_CONFIG_ALLOW_CROSS=1
ENV PKG_CONFIG_PATH="/usr/lib/aarch64-linux-gnu/pkgconfig/:${PKG_CONFIG_PATH}"
ENV CARGO_TARGET_AARCH64_UNKNOWN_LINUX_GNU_LINKER=aarch64-linux-gnu-gcc \
    AR_aarch64_unknown_linux_gnu=aarch64-linux-gnu-ar \
    CC_aarch64_unknown_linux_gnu=aarch64-linux-gnu-gcc \
    CXX_aarch64_unknown_linux_gnu=aarch64-linux-gnu-g++
ENV DATABASE_URL "sqlite:///tmp/data.db"

RUN curl -L --proto '=https' --tlsv1.2 -sSf https://raw.githubusercontent.com/cargo-bins/cargo-binstall/main/install-from-binstall-release.sh | bash

RUN cargo binstall --no-confirm sqlx-cli
RUN touch /tmp/data.db && cargo sqlx database reset --source ./hifirs/migrations -y

WORKDIR /app

COPY . .

COPY --from=www /app/build /app/www/build


RUN cargo build --bin hifi-rs --release --target aarch64-unknown-linux-gnu

RUN mv target/aarch64-unknown-linux-gnu/release/hifi-rs /usr/local/bin

FROM scratch

COPY --from=build /usr/local/bin/hifi-rs .

ENTRYPOINT ["./hifi-rs"]
