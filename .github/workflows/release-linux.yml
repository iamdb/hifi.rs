name: Create release, build and upload artifacts (Linux)

permissions:
  contents: write

on:
  push:
    tags:
      - v[0-9]+.*
env:
  CLICOLOR_FORCE: 1
jobs:
  create-build-upload:
    name: Build, package and publish
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        arch: [x86_64, aarch64]
    container:
      image: rust:1-bookworm
      env:
        PKG_CONFIG_ALLOW_CROSS: 1
        PKG_CONFIG_PATH: /usr/lib/${{ matrix.arch }}-linux-gnu/pkgconfig/:${PKG_CONFIG_PATH}
        CARGO_TARGET_AARCH64_UNKNOWN_LINUX_GNU_LINKER: aarch64-linux-gnu-gcc
        AR_aarch64_unknown_linux_gnu: aarch64-linux-gnu-ar
        CC_aarch64_unknown_linux_gnu: aarch64-linux-gnu-gcc
        CXX_aarch64_unknown_linux_gnu: aarch64-linux-gnu-g++ 
    env:
      RUST_BACKTRACE: full
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
      - uses: Swatinem/rust-cache@v2
        with:
          shared-key: ${{ runner.target }}-rust-cache
      - uses: extractions/setup-just@v1
      - name: Build player ${{ matrix.arch }} 
        run: just build-player ${{ matrix.arch }}-unknown-linux-gnu
      - name: Tar hifi-rs-${{ matrix.arch }}.tar.gz
        run: tar -cvf hifi-rs-${{ matrix.arch }}.tar.gz -C ./target/${{ matrix.arch }}/release/ hifi-rs
      - name: Release ${{ matrix.target }}
        uses: softprops/action-gh-release@v1
        with:
          files: hifi-rs-${{ matrix.arch }}.tar.gz
