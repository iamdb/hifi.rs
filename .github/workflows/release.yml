name: Create release, build and upload artifacts

permissions:
  contents: write

on:
  push:
    tags:
      - v[0-9]+.*
env:
  CLICOLOR_FORCE: 1
jobs:
  create-release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: taiki-e/create-gh-release-action@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

  build-upload:
    name: Build, package and publish
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: true
      matrix:
        os: [ubuntu-latest, macos-latest]
        rust: [stable]
    env:
      RUST_BACKTRACE: full
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
      - uses: Swatinem/rust-cache@v2
        with:
          shared-key: ${{ runner.os }}-rust-cache
      - name: Install gstreamer (ubuntu-latest)
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y musl-tools libunwind-dev libgstreamer1.0-dev libgstreamer-plugins-base1.0-dev gstreamer1.0-plugins-base gstreamer1.0-plugins-good gstreamer1.0-plugins-bad gstreamer1.0-plugins-ugly gstreamer1.0-libav libgstrtspserver-1.0-dev libges-1.0-dev libncurses5-dev libncursesw5-dev
      - name: Install gstreamer (macos-latest)
        if: matrix.os == 'macos-latest'
        run: |
          brew update
          brew install gstreamer
      - name: Install Rust Toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          components: rustfmt, clippy
      - uses: taiki-e/upload-rust-binary-action@v1
        env:
          RUSTFLAGS: "-C target-feature=+crt-static"
          PKG_CONFIG_ALLOW_CROSS: 1
          PKG_CONFIG_ALL_STATIC: true
          PKG_CONFIG_PATH_x86_64_unknown_linux_gnu: "/usr/lib/x86_64-linux-gnu/pkgconfig"
          OPENSSL_STATIC: true
          LIBZ_SYS_STATIC: 1
          QOBUZ_USERNAME: ""
          QOBUZ_PASSWORD: ""
        with:
          bin: hifi-rs
          token: ${{ secrets.GITHUB_TOKEN }}
