name: On Pull Request To Main
on:
  pull_request:
    paths:
      - "**.rs"
      - "**/Cargo.lock"
      - "**/Cargo.toml"
      - "**/package.json"
      - "**.svelte"
      - "**.js"
      - "**.ts"
    branches:
      - main
env:
  CLICOLOR_FORCE: 1
jobs:
  pre-merge:
    name: Pre-merge checks
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: true
      matrix:
        os: [ubuntu-latest, macos-latest]
        target: [x86_64-unknown-linux-gnu, aarch64-unknown-linux-gnu, x86_64-apple-darwin, aarch64-apple-darwin]
        rust: [stable]
        exclude:
          - os: ubuntu-latest
            target: x86_64-apple-darwin
          - os: ubuntu-latest
            target: aarch64-apple-darwin
          - os: macos-latest
            target: x86_64-unknown-linux-gnu
          - os: macos-latest
            target: aarch64-unknown-linux-gnu
    env:
      RUST_BACKTRACE: full
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
      - uses: Swatinem/rust-cache@v2
        with:
          shared-key: ${{ runner.target }}-rust-cache
      - name: Install ${{ matrix.target }} packages (ubuntu-latest)
        if: matrix.target == 'x86_64-unknown-linux-gnu'
        run: |
          sudo apt-get update
          sudo apt-get install -y libunwind-dev libgstreamer1.0-dev
      - name: Install ${{ matrix.target }} packages (ubuntu-latest)
        if: matrix.target == 'aarch64-unknown-linux-gnu'
        run: |
          sudo sed -i -e 's/deb-src/deb-src [arch=amd64]/g' /etc/apt/sources.list
          sudo sed -i -e 's/deb/deb [arch=amd64]/g' /etc/apt/sources.list
          sudo apt-add-repository -s 'deb [arch=arm64] http://ports.ubuntu.com/ubuntu-ports/ jammy main restricted universe multiverse'
          sudo dpkg --add-architecture arm64
          sudo apt-get update 
          sudo apt-get install -y -f curl libgstreamer1.0-dev:arm64 g++-aarch64-linux-gnu libc6-dev-arm64-cross libglib2.0-dev:arm64
      - name: Install packages (macos-latest)
        if: matrix.os == 'macos-latest'
        run: |
          brew install gstreamer
      - name: Install Rust Toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          target: ${{ matrix.target }}
          components: rustfmt, clippy
          override: true
      - name: Install Cargo Plugins
        run: cargo install cargo-make cargo-insta sqlx-cli
      - name: Create db file
        run: "touch /tmp/data.db && cd hifirs && cargo sqlx database reset -y"
        env: 
          DATABASE_URL: "sqlite:///tmp/data.db"
      - name: Run CI Flow
        uses: actions-rs/cargo@v1
        env:
          QOBUZ_USERNAME: ${{secrets.QOBUZ_USERNAME}}
          QOBUZ_PASSWORD: ${{secrets.QOBUZ_PASSWORD}}
          DATABASE_URL: "sqlite:///tmp/data.db"
        with:
          command: make
          args: ci-flow
